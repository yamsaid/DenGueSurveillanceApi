#!/usr/bin/env python3
"""
Test sp√©cifique pour v√©rifier le scroll automatique
"""

import requests
import time

def test_scroll_functionality():
    """Test du scroll automatique lors du changement de page"""
    base_url = "http://localhost:8000"
    
    print("üß™ Test du scroll automatique")
    print("=" * 40)
    
    # Test 1: Recherche initiale
    print("\n1. Test de recherche initiale...")
    try:
        data = {
            "date_debut": "2024-01-01",
            "date_fin": "2024-12-31",
            "region": "Toutes",
            "limit": 30,
            "page_size": 10,
            "page": 1
        }
        
        response = requests.post(f"{base_url}/affichage-donnees", data=data)
        if response.status_code == 200:
            print("‚úÖ Recherche initiale r√©ussie")
        else:
            print(f"‚ùå Erreur recherche initiale: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la recherche initiale: {e}")
        return False
    
    # Test 2: Test avec scroll_to_table
    print("\n2. Test avec param√®tre scroll_to_table...")
    try:
        data["scroll_to_table"] = "true"
        response = requests.post(f"{base_url}/affichage-donnees", data=data)
        if response.status_code == 200:
            print("‚úÖ Requ√™te avec scroll_to_table r√©ussie")
            
            # V√©rifier que le param√®tre est bien pass√©
            if "scroll_to_table" in response.text:
                print("‚úÖ Param√®tre scroll_to_table pr√©sent dans la r√©ponse")
            else:
                print("‚ö†Ô∏è  Param√®tre scroll_to_table non trouv√© dans la r√©ponse")
                
        else:
            print(f"‚ùå Erreur avec scroll_to_table: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test scroll_to_table: {e}")
        return False
    
    # Test 3: Test de navigation avec scroll
    print("\n3. Test de navigation avec scroll...")
    try:
        data["page"] = 2
        data["scroll_to_table"] = "true"
        response = requests.post(f"{base_url}/affichage-donnees", data=data)
        if response.status_code == 200:
            print("‚úÖ Navigation avec scroll r√©ussie")
            
            # V√©rifier la pr√©sence du JavaScript de scroll
            if "scrollIntoView" in response.text:
                print("‚úÖ JavaScript de scroll pr√©sent")
            else:
                print("‚ö†Ô∏è  JavaScript de scroll non trouv√©")
                
        else:
            print(f"‚ùå Erreur navigation avec scroll: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test de navigation avec scroll: {e}")
        return False
    
    # Test 4: V√©rification du HTML g√©n√©r√©
    print("\n4. V√©rification du HTML g√©n√©r√©...")
    try:
        # V√©rifier la pr√©sence des √©l√©ments de pagination
        if "pagination-section" in response.text:
            print("‚úÖ Section pagination pr√©sente")
        else:
            print("‚ö†Ô∏è  Section pagination non trouv√©e")
            
        # V√©rifier la pr√©sence des boutons de navigation
        if "btn-pagination" in response.text:
            print("‚úÖ Boutons de pagination pr√©sents")
        else:
            print("‚ö†Ô∏è  Boutons de pagination non trouv√©s")
            
        # V√©rifier la pr√©sence des informations de pagination
        if "pagination-info" in response.text:
            print("‚úÖ Informations de pagination pr√©sentes")
        else:
            print("‚ö†Ô∏è  Informations de pagination non trouv√©es")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la v√©rification HTML: {e}")
        return False
    
    print("\n" + "=" * 40)
    print("üéâ Test du scroll automatique termin√© avec succ√®s!")
    return True

if __name__ == "__main__":
    print("üöÄ D√©marrage du test de scroll automatique...")
    
    # Attendre que le serveur d√©marre
    print("‚è≥ Attente du d√©marrage du serveur...")
    time.sleep(2)
    
    # Ex√©cuter le test
    test_scroll_functionality()
    
    print("\n‚ú® Test termin√©!") 