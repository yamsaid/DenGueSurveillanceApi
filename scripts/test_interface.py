#!/usr/bin/env python3
"""
Test pour v√©rifier l'interface et le scroll
"""

import requests
import time

def test_interface():
    """Test de l'interface et du scroll"""
    base_url = "http://localhost:8000"
    
    print("üß™ Test de l'interface et du scroll")
    print("=" * 40)
    
    # Test 1: V√©rifier que le champ "Page" n'est pas visible
    print("\n1. V√©rification de l'interface...")
    try:
        response = requests.get(f"{base_url}/exploration")
        if response.status_code == 200:
            print("‚úÖ Page exploration accessible")
            
            # V√©rifier que le champ "Page" est cach√©
            if 'input type="hidden" id="page"' in response.text:
                print("‚úÖ Champ 'Page' bien cach√© (type hidden)")
            else:
                print("‚ö†Ô∏è  Champ 'Page' pas trouv√© ou pas cach√©")
                
            # V√©rifier que le label "Page" est cach√©
            if 'style="display: none;"' in response.text and 'Page' in response.text:
                print("‚úÖ Label 'Page' bien cach√©")
            else:
                print("‚ö†Ô∏è  Label 'Page' pas trouv√© ou pas cach√©")
                
        else:
            print(f"‚ùå Erreur: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Erreur de connexion: {e}")
        return False
    
    # Test 2: Test de navigation avec scroll
    print("\n2. Test de navigation avec scroll...")
    try:
        data = {
            "date_debut": "2024-01-01",
            "date_fin": "2024-12-31",
            "region": "Toutes",
            "limit": 30,
            "page_size": 10,
            "page": 1,
            "scroll_to_table": "true"
        }
        
        response = requests.post(f"{base_url}/affichage-donnees", data=data)
        if response.status_code == 200:
            print("‚úÖ Navigation avec scroll r√©ussie")
            
            # V√©rifier la pr√©sence du JavaScript de scroll
            if "scrollIntoView" in response.text:
                print("‚úÖ JavaScript de scroll pr√©sent")
            else:
                print("‚ö†Ô∏è  JavaScript de scroll non trouv√©")
                
            # V√©rifier que le param√®tre scroll_to_table est pass√©
            if "scroll_to_table" in response.text:
                print("‚úÖ Param√®tre scroll_to_table pr√©sent")
            else:
                print("‚ö†Ô∏è  Param√®tre scroll_to_table non trouv√©")
                
        else:
            print(f"‚ùå Erreur navigation: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test de navigation: {e}")
        return False
    
    # Test 3: Test de changement de page
    print("\n3. Test de changement de page...")
    try:
        data["page"] = 2
        response = requests.post(f"{base_url}/affichage-donnees", data=data)
        if response.status_code == 200:
            print("‚úÖ Changement de page r√©ussi")
            
            # V√©rifier que la pagination fonctionne
            if "Page 2 sur" in response.text:
                print("‚úÖ Pagination fonctionne correctement")
            else:
                print("‚ö†Ô∏è  Pagination ne semble pas fonctionner")
                
        else:
            print(f"‚ùå Erreur changement de page: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du changement de page: {e}")
        return False
    
    print("\n" + "=" * 40)
    print("üéâ Test de l'interface termin√© avec succ√®s!")
    return True

if __name__ == "__main__":
    print("üöÄ D√©marrage du test d'interface...")
    
    # Attendre que le serveur d√©marre
    print("‚è≥ Attente du d√©marrage du serveur...")
    time.sleep(2)
    
    # Ex√©cuter le test
    test_interface()
    
    print("\n‚ú® Test termin√©!") 